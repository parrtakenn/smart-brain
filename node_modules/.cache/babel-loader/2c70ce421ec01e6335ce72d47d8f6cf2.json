{"ast":null,"code":"var _jsxFileName = \"/Users/tannerpark/Desktop/CODING ZTM/PROJECTS/smart-brain-rest/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport ParticlesOptions from './components/Particles/Particles';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css'; // import Clarifai from 'clarifai';\n// const app = new Clarifai.App({\n//   apiKey: '6aa94cf8d91d4b65aae3783cc4013506'\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = JSON.parse(data, null, 2).outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      const raw = JSON.stringify({\n        user_app_id: {\n          user_id: \"fhogdoqjeyy6\",\n          app_id: \"smart-brain\"\n        },\n        inputs: [{\n          data: {\n            image: {\n              url: this.state.input\n            }\n          }\n        }]\n      });\n      fetch(\"https://api.clarifai.com/v2/models/f76196b43bbd45c99b4f3cd8e8b40a8a/outputs\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"6aa94cf8d91d4b65aae3783cc4013506\"\n        },\n        body: raw\n      }).then(response => response.text()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(error => console.log('error', error));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesOptions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","ParticlesOptions","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","JSON","parse","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","raw","stringify","user_app_id","user_id","app_id","inputs","url","state","fetch","method","headers","Accept","Authorization","body","then","response","text","json","count","Object","assign","catch","error","console","log","onRouteChange","route","isSignedIn","imageUrl","render"],"sources":["/Users/tannerpark/Desktop/CODING ZTM/PROJECTS/smart-brain-rest/smart-brain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ParticlesOptions from './components/Particles/Particles';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n// import Clarifai from 'clarifai';\n\n// const app = new Clarifai.App({\n//   apiKey: '6aa94cf8d91d4b65aae3783cc4013506'\n// });\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  // Connect to another piece of application\n  // componentDidMount() {\n  //   fetch('http://localhost:3000')\n  //     .then(response => response.json())\n  //     .then(console.log)\n  // }\n\n  calculateFaceLocation = (data) => {\n     const clarifaiFace = JSON.parse(data, null, 2).outputs[0].data.regions[0]\n      .region_info.bounding_box;\n     const image = document.getElementById(\"inputimage\");\n     const width = Number(image.width);\n     const height = Number(image.height);\n     return {\n       leftCol: clarifaiFace.left_col * width,\n       topRow: clarifaiFace.top_row * height,\n       rightCol: width - clarifaiFace.right_col * width,\n       bottomRow: height - clarifaiFace.bottom_row * height,\n     };\n   }\n\n  // calculateFaceLocation = (data) => {\n  //   const clarifaiFace = JSON.parse(da.data.regions[0].region_info.bounding_box;\n  //   const image = document.getElementById('inputimage');\n  //   const width = Number(image.width);\n  //   const height = Number(image.height);\n  //   return {\n  //     leftCol: clarifaiFace.left_col * width,\n  //     topRow: clarifaiFace.top_row * height,\n  //     rightCol: width - (clarifaiFace.right_col * width),\n  //     bottomRow: height - (clarifaiFace.bottom_row * height)\n  //   }\n  // }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n   const raw = JSON.stringify({\n     user_app_id : {\n       user_id: \"fhogdoqjeyy6\",\n       app_id: \"smart-brain\"\n     },\n     inputs: [\n       {\n         data: {\n           image: {\n             url: this.state.input\n           },\n         },\n       },\n     ],\n   });\n\n   fetch(\n      \"https://api.clarifai.com/v2/models/f76196b43bbd45c99b4f3cd8e8b40a8a/outputs\",\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"6aa94cf8d91d4b65aae3783cc4013506\",\n        },\n        body: raw,\n      }\n    )\n   .then((response) => response.text())\n    .then((response) => {\n      if (response){\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries: count}));\n        });\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response));\n    })\n    .catch((error) => console.log('error', error));\n}\n\n //  onButtonSubmit = () => {\n //   const raw = JSON.stringify({\n //     user_app_id : {\n //       user_id: \"fhogdoqjeyy6\",\n //       app_id: \"smart-brain\"\n //     },\n //     inputs: [\n //       {\n //         data: {\n //           image: {\n //             url: this.state.input\n //           },\n //         },\n //       },\n //     ],\n //   });\n\n //   fetch(\n //      \"https://api.clarifai.com/v2/models/f76196b43bbd45c99b4f3cd8e8b40a8a/outputs\",\n //      {\n //        method: \"POST\",\n //        headers: {\n //          Accept: \"application/json\",\n //          Authorization: \"Key 6aa94cf8d91d4b65aae3783cc4013506\",\n //        },\n //        body: raw,\n //      }\n //    )\n //    .then((response) => response.text())\n //    .then((result) => this.displayFaceBox(this.calculateFaceLocation(result)))\n //    .catch((error) => console.log(\"error\", error));\n // }\n\n  //   this.setState({imageUrl: this.state.input});\n  //   app.models\n  //     .predict(\n  //       // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\n  //       // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\n  //       // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\n  //       // If that isn't working, then that means you will have to wait until their servers are back up. Another solution\n  //       // is to use a different version of their model that works like the ones found here: https://github.com/Clarifai/clarifai-javascript/blob/master/src/index.js\n  //       // so you would change from:\n  //       // .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n  //       // to:\n  //       // .predict('53e1df302c079b3db8a0a36033ed2d15', this.state.input)\n  //       Clarifai.FACE_DETECT_MODEL,\n  //       this.state.input)\n  //     .then(response => {\n  //       console.log('hi', response)\n  //       if (response) {\n  //         fetch('http://localhost:3000/image', {\n  //           method: 'put',\n  //           headers: {'Content-Type': 'application/json'},\n  //           body: JSON.stringify({\n  //             id: this.state.user.id\n  //           })\n  //         })\n  //           .then(response => response.json())\n  //           .then(count => {\n  //             this.setState(Object.assign(this.state.user, { entries: count }))\n  //           })\n  //       }\n  //       this.displayFaceBox(this.calculateFaceLocation(response))\n  //     })\n  //     .catch(err => console.log(err));\n  // }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <ParticlesOptions />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home' \n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n                />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n              route === 'signin' \n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}