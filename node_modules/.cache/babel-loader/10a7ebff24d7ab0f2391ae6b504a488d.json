{"ast":null,"code":"import Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\nconst particlesInit = async main => {\n  console.log(main); // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n  // starting from v2 you can add only the features you need reducing the bundle size\n\n  await loadFull(main);\n};\n\nconst particlesLoaded = container => {\n  console.log(container);\n};\n\nid = \"tsparticles\";\ninit = {\n  particlesInit\n};\nloaded = {\n  particlesLoaded\n};\noptions = {\n  background: {\n    color: {\n      value: \"#0d47a1\"\n    }\n  },\n  fpsLimit: 120,\n  interactivity: {\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"push\"\n      },\n      onHover: {\n        enable: true,\n        mode: \"repulse\"\n      },\n      resize: true\n    },\n    modes: {\n      push: {\n        quantity: 4\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4\n      }\n    }\n  },\n  particles: {\n    color: {\n      value: \"#ffffff\"\n    },\n    links: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1\n    },\n    collisions: {\n      enable: true\n    },\n    move: {\n      direction: \"none\",\n      enable: true,\n      outModes: {\n        default: \"bounce\"\n      },\n      random: false,\n      speed: 6,\n      straight: false\n    },\n    number: {\n      density: {\n        enable: true,\n        area: 800\n      },\n      value: 80\n    },\n    opacity: {\n      value: 0.5\n    },\n    shape: {\n      type: \"circle\"\n    },\n    size: {\n      value: {\n        min: 1,\n        max: 5\n      }\n    }\n  },\n  detectRetina: true\n};\nexport default Particles;","map":{"version":3,"names":["Particles","loadFull","particlesInit","main","console","log","particlesLoaded","container","id","init","loaded","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","collisions","move","direction","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina"],"sources":["/Users/tannerpark/Desktop/CODING ZTM/PROJECTS/smartbrain/src/components/Particles/Particles.js"],"sourcesContent":["import Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\nconst particlesInit = async (main) => {\n\tconsole.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n};\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n};\n\n  id=\"tsparticles\"\n  init={particlesInit}\n  loaded={particlesLoaded}\n  options={\n    background: {\n      color: {\n        value: \"#0d47a1\",\n      },\n    },\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        onClick: {\n          enable: true,\n          mode: \"push\",\n        },\n        onHover: {\n          enable: true,\n          mode: \"repulse\",\n        },\n        resize: true,\n      },\n      modes: {\n        push: {\n          quantity: 4,\n        },\n        repulse: {\n          distance: 200,\n          duration: 0.4,\n        },\n      },\n    },\n    particles: {\n      color: {\n        value: \"#ffffff\",\n      },\n      links: {\n        color: \"#ffffff\",\n        distance: 150,\n        enable: true,\n        opacity: 0.5,\n        width: 1,\n      },\n      collisions: {\n        enable: true,\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        outModes: {\n          default: \"bounce\",\n        },\n        random: false,\n        speed: 6,\n        straight: false,\n      },\n      number: {\n        density: {\n          enable: true,\n          area: 800,\n        },\n        value: 80,\n      },\n      opacity: {\n        value: 0.5,\n      },\n      shape: {\n        type: \"circle\",\n      },\n      size: {\n        value: { min: 1, max: 5 },\n      },\n    },\n    detectRetina: true,\n  }\n\nexport default Particles;\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAOC,IAAP,IAAgB;EACrCC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADqC,CAGlC;EACA;EACA;;EACA,MAAMF,QAAQ,CAACE,IAAD,CAAd;AACH,CAPD;;AASE,MAAMG,eAAe,GAAIC,SAAD,IAAe;EACrCH,OAAO,CAACC,GAAR,CAAYE,SAAZ;AACH,CAFC;;AAIAC,EAAE,GAAC,aAAH;AACAC,IAAI,GAAC;EAACP;AAAD,CAAL;AACAQ,MAAM,GAAC;EAACJ;AAAD,CAAP;AACAK,OAAO,GAAC;EACNC,UAAU,EAAE;IACVC,KAAK,EAAE;MACLC,KAAK,EAAE;IADF;EADG,CADN;EAMNC,QAAQ,EAAE,GANJ;EAONC,aAAa,EAAE;IACbC,MAAM,EAAE;MACNC,OAAO,EAAE;QACPC,MAAM,EAAE,IADD;QAEPC,IAAI,EAAE;MAFC,CADH;MAKNC,OAAO,EAAE;QACPF,MAAM,EAAE,IADD;QAEPC,IAAI,EAAE;MAFC,CALH;MASNE,MAAM,EAAE;IATF,CADK;IAYbC,KAAK,EAAE;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE;MADN,CADD;MAILC,OAAO,EAAE;QACPC,QAAQ,EAAE,GADH;QAEPC,QAAQ,EAAE;MAFH;IAJJ;EAZM,CAPT;EA6BNC,SAAS,EAAE;IACThB,KAAK,EAAE;MACLC,KAAK,EAAE;IADF,CADE;IAITgB,KAAK,EAAE;MACLjB,KAAK,EAAE,SADF;MAELc,QAAQ,EAAE,GAFL;MAGLR,MAAM,EAAE,IAHH;MAILY,OAAO,EAAE,GAJJ;MAKLC,KAAK,EAAE;IALF,CAJE;IAWTC,UAAU,EAAE;MACVd,MAAM,EAAE;IADE,CAXH;IAcTe,IAAI,EAAE;MACJC,SAAS,EAAE,MADP;MAEJhB,MAAM,EAAE,IAFJ;MAGJiB,QAAQ,EAAE;QACRC,OAAO,EAAE;MADD,CAHN;MAMJC,MAAM,EAAE,KANJ;MAOJC,KAAK,EAAE,CAPH;MAQJC,QAAQ,EAAE;IARN,CAdG;IAwBTC,MAAM,EAAE;MACNC,OAAO,EAAE;QACPvB,MAAM,EAAE,IADD;QAEPwB,IAAI,EAAE;MAFC,CADH;MAKN7B,KAAK,EAAE;IALD,CAxBC;IA+BTiB,OAAO,EAAE;MACPjB,KAAK,EAAE;IADA,CA/BA;IAkCT8B,KAAK,EAAE;MACLC,IAAI,EAAE;IADD,CAlCE;IAqCTC,IAAI,EAAE;MACJhC,KAAK,EAAE;QAAEiC,GAAG,EAAE,CAAP;QAAUC,GAAG,EAAE;MAAf;IADH;EArCG,CA7BL;EAsENC,YAAY,EAAE;AAtER,CAAR;AAyEF,eAAejD,SAAf"},"metadata":{},"sourceType":"module"}