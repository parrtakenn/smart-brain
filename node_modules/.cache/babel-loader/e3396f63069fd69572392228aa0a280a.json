{"ast":null,"code":"var _jsxFileName = \"/Users/tannerpark/Desktop/CODING ZTM/PROJECTS/smartbrain/src/components/Particles/Particles.js\";\nimport React from 'react';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport './Particles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ParticlesOptions = () => {\n  const particlesInit = async main => {\n    console.log(main); // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n\n    await loadFull(main);\n  };\n\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Particles\",\n    children: /*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      init: particlesInit,\n      loaded: particlesLoaded,\n      options: {\n        background: {\n          color: {\n            value: 0\n          }\n        },\n        fpsLimit: 240,\n        interactivity: {\n          events: {\n            onClick: {\n              enable: true,\n              mode: \"push\"\n            },\n            onHover: {\n              enable: true,\n              mode: \"repulse\"\n            },\n            resize: true\n          },\n          modes: {\n            push: {\n              quantity: 4\n            },\n            repulse: {\n              distance: 100,\n              duration: 0.4,\n              shape: 'square'\n            }\n          }\n        },\n        particles: {\n          color: {\n            value: \"#ffffff\"\n          },\n          links: {\n            color: \"#ffffff\",\n            distance: 130,\n            enable: true,\n            opacity: 0.5,\n            width: 1\n          },\n          collisions: {\n            enable: false\n          },\n          move: {\n            direction: \"none\",\n            enable: true,\n            outModes: {\n              default: \"bounce\"\n            },\n            random: false,\n            speed: 2,\n            straight: false\n          },\n          number: {\n            density: {\n              enable: true,\n              area: 500\n            },\n            value: 70\n          },\n          opacity: {\n            value: 0.5\n          },\n          shape: {\n            type: \"circle\"\n          },\n          size: {\n            value: {\n              min: 1,\n              max: 4\n            }\n          }\n        },\n        detectRetina: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ParticlesOptions;\nexport default ParticlesOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParticlesOptions\");","map":{"version":3,"names":["React","Particles","loadFull","ParticlesOptions","particlesInit","main","console","log","particlesLoaded","container","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","shape","particles","links","opacity","width","collisions","move","direction","outModes","default","random","speed","straight","number","density","area","type","size","min","max","detectRetina"],"sources":["/Users/tannerpark/Desktop/CODING ZTM/PROJECTS/smartbrain/src/components/Particles/Particles.js"],"sourcesContent":["import React from 'react';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport './Particles.css';\n\nconst ParticlesOptions = () => {\n\tconst particlesInit = async (main) => {\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n  };\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n  return (\n    <div className='Particles'>\n    <Particles\n      id=\"tsparticles\"\n      init={particlesInit}\n      loaded={particlesLoaded}\n      options={{\n        background: {\n          color: {\n            value: 0,\n          },\n        },\n        fpsLimit: 240,\n        interactivity: {\n          events: {\n            onClick: {\n              enable: true,\n              mode: \"push\",\n            },\n            onHover: {\n              enable: true,\n              mode: \"repulse\",\n            },\n            resize: true,\n          },\n          modes: {\n            push: {\n              quantity: 4,\n            },\n            repulse: {\n              distance: 100,\n              duration: 0.4,\n              shape: 'square'\n            },\n          },\n        },\n        particles: {\n          color: {\n            value: \"#ffffff\",\n          },\n          links: {\n            color: \"#ffffff\",\n            distance: 130,\n            enable: true,\n            opacity: 0.5,\n            width: 1,\n          },\n          collisions: {\n            enable: false,\n          },\n          move: {\n            direction: \"none\",\n            enable: true,\n            outModes: {\n              default: \"bounce\",\n            },\n            random: false,\n            speed: 2,\n            straight: false,\n          },\n          number: {\n            density: {\n              enable: true,\n              area: 500,\n            },\n            value: 70,\n          },\n          opacity: {\n            value: 0.5,\n          },\n          shape: {\n            type: \"circle\",\n          },\n          size: {\n            value: { min: 1, max: 4 },\n          },\n        },\n        detectRetina: true,\n      }}\n    />\n    </div>\n  );\n};\n\nexport default ParticlesOptions;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAC9B,MAAMC,aAAa,GAAG,MAAOC,IAAP,IAAgB;IACnCC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADmC,CAGnC;IACA;IACA;;IACA,MAAMH,QAAQ,CAACG,IAAD,CAAd;EACD,CAPF;;EASC,MAAMG,eAAe,GAAIC,SAAD,IAAe;IACrCH,OAAO,CAACC,GAAR,CAAYE,SAAZ;EACD,CAFD;;EAGA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,uBACA,QAAC,SAAD;MACE,EAAE,EAAC,aADL;MAEE,IAAI,EAAEL,aAFR;MAGE,MAAM,EAAEI,eAHV;MAIE,OAAO,EAAE;QACPE,UAAU,EAAE;UACVC,KAAK,EAAE;YACLC,KAAK,EAAE;UADF;QADG,CADL;QAMPC,QAAQ,EAAE,GANH;QAOPC,aAAa,EAAE;UACbC,MAAM,EAAE;YACNC,OAAO,EAAE;cACPC,MAAM,EAAE,IADD;cAEPC,IAAI,EAAE;YAFC,CADH;YAKNC,OAAO,EAAE;cACPF,MAAM,EAAE,IADD;cAEPC,IAAI,EAAE;YAFC,CALH;YASNE,MAAM,EAAE;UATF,CADK;UAYbC,KAAK,EAAE;YACLC,IAAI,EAAE;cACJC,QAAQ,EAAE;YADN,CADD;YAILC,OAAO,EAAE;cACPC,QAAQ,EAAE,GADH;cAEPC,QAAQ,EAAE,GAFH;cAGPC,KAAK,EAAE;YAHA;UAJJ;QAZM,CAPR;QA8BPC,SAAS,EAAE;UACTjB,KAAK,EAAE;YACLC,KAAK,EAAE;UADF,CADE;UAITiB,KAAK,EAAE;YACLlB,KAAK,EAAE,SADF;YAELc,QAAQ,EAAE,GAFL;YAGLR,MAAM,EAAE,IAHH;YAILa,OAAO,EAAE,GAJJ;YAKLC,KAAK,EAAE;UALF,CAJE;UAWTC,UAAU,EAAE;YACVf,MAAM,EAAE;UADE,CAXH;UAcTgB,IAAI,EAAE;YACJC,SAAS,EAAE,MADP;YAEJjB,MAAM,EAAE,IAFJ;YAGJkB,QAAQ,EAAE;cACRC,OAAO,EAAE;YADD,CAHN;YAMJC,MAAM,EAAE,KANJ;YAOJC,KAAK,EAAE,CAPH;YAQJC,QAAQ,EAAE;UARN,CAdG;UAwBTC,MAAM,EAAE;YACNC,OAAO,EAAE;cACPxB,MAAM,EAAE,IADD;cAEPyB,IAAI,EAAE;YAFC,CADH;YAKN9B,KAAK,EAAE;UALD,CAxBC;UA+BTkB,OAAO,EAAE;YACPlB,KAAK,EAAE;UADA,CA/BA;UAkCTe,KAAK,EAAE;YACLgB,IAAI,EAAE;UADD,CAlCE;UAqCTC,IAAI,EAAE;YACJhC,KAAK,EAAE;cAAEiC,GAAG,EAAE,CAAP;cAAUC,GAAG,EAAE;YAAf;UADH;QArCG,CA9BJ;QAuEPC,YAAY,EAAE;MAvEP;IAJX;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAkFD,CA/FD;;KAAM5C,gB;AAiGN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}